{"version":3,"sources":["Rating/index.js","Contact/index.js","Address/index.js","RestaurantCard/index.js","AverageRatingLabel/index.js","StandardDeviationLabel/index.js","TotalRestaurantsInRadius/index.js","context.js","RestaurantList/index.js","RestaurantMap/index.js","FilterControls/index.js","reducer.js","Melp/index.js","serviceWorker.js","index.js"],"names":["Rating","props","Box","gridArea","align","rating","Contact","direction","Mail","contact","email","Phone","phone","Domain","site","Address","data","street","city","state","RestaurantCard","Grid","background","rows","columns","gap","areas","name","start","end","Text","address","AverageRating","pad","size","StandardDeviationLabel","sigma","TotalRestaurantsInRadius","total","Context","createContext","lat","lng","radius","restaurants","aux","filtered","RestaurantList","useContext","dispatch","sortByKey","array","key","order","sort","a","b","x","y","getAverageRating","sum","m","length","i","useState","name_asc","setNameAsc","rating_asc","setRatingAsc","justify","Button","label","icon","Ascend","Descend","onClick","arr","type","payload","AverageRatingLabel","Math","pow","parseFloat","sqrt","toFixed","getStdDeviation","overflow","InfiniteScroll","items","item","id","navigationControl","position","top","left","margin","INITIAL_VIEWPORT","latitude","longitude","zoom","RestaurantMap","viewport","setViewport","fill","lngLat","leftButton","width","height","mapStyle","mapboxApiAccessToken","onViewportChange","style","Location","map","res","location","offsetLeft","offsetTop","Cafeteria","FilterControls","basis","TextInput","placeholder","onChange","event","target","value","Anchor","calcCrow","coords1","coords2","dLat","toRad","dLon","lat1","lat2","sin","cos","d","atan2","console","log","Value","PI","Reducer","filter","el","Melp","initialState","useReducer","fetchData","axios","proxyUrl","targetUrl","useEffect","Provider","Grommet","full","theme","global","font","family","href","primary","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a17695e4.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Box} from 'grommet';\n\nconst Rating = (props) => {\n\treturn(\n\t\t\n\t\t<Box gridArea=\"restaurantRating\" align=\"end\">\n\t\t\t\t\t<p>{props.rating} â˜…</p>\n\t\t</Box>\n\t)\n}\n\nexport default Rating;","import React from 'react';\n\nimport { Anchor, Box } from 'grommet';\n\nimport { Domain, Mail, Phone } from 'grommet-icons'\n\nconst Contact = (props) => {\n\treturn(\n\n\t\t<Box \n\t\tgridArea=\"restaurantContact\"\n\t\talign=\"end\"\n\t\t>\n\t\t\t<Box direction=\"row\">\n\t\t\t\t<Mail />\n\n\t\t\t\t{props.contact.email}\n\t\t\t\t\t\n\t\t\t</Box>\n\t\t\t\n\t\t\t<Box direction=\"row\">\n\t\t\t\t<Phone />\n\n\t\t\t\t{props.contact.phone}\n\t\t\t</Box>\n\n\t\t\t<Box direction=\"row\">\n\t\t\t\t<Domain />\n\n\t\t\t\t\n\t\t\t\t\t{props.contact.site}\n\t\t\t\t\n\t\t\t</Box>\n\n\t\t</Box>\n\t)\n}\n\nexport default Contact;","import React from 'react';\n\nimport {Box, Text} from 'grommet';\n\nconst Address = (props) => {\n\treturn(\n\n\t\t<Box gridArea=\"restaurantAddress\">\n\n\t\t\t{props.data.street}\n\t\t\t<br />\n\t\t\t{props.data.city},&nbsp;{props.data.state}\n\t\t\t\n\t\t</Box>\n\t)\n}\n\nexport default Address;","import React from 'react';\n\nimport { Box, Grid, Text } from 'grommet';\n\nimport Rating from '../Rating'\nimport Contact from '../Contact'\nimport Address from '../Address'\n\nconst RestaurantCard = (props) => {\n\treturn(\n\t\t<Grid \n\t\tbackground=\"neutral-1\"\n\t\t\trows={['xsmall', 'small']}\n\t\t\tcolumns={['xsmall', 'small']}\n\n\t\t\tgap=\"large\"\n\t\t\tareas={[\n\t\t\t\t{name: 'restaurantName', start: [0,0], end: [1,0]},\n\t\t\t\t{name: 'restaurantRating', start: [1,0], end: [2,0]},\n\t\t\t\t{name: 'restaurantAddress', start: [0,1], end: [1,1]},\n\t\t\t\t{name: 'restaurantContact', start: [1,1], end: [2,1]},\n\t\t\t]}\n\t\t>\n\n\t\t\t\t<Box \n\t\t\t\tgridArea=\"restaurantName\" \n\t\t\t\t>\n\t\t\t\t\t\t<Text>{props.data.name}</Text>\n\t\t\t\t</Box>\n\n\t\t\t\t<Address data={props.data.address} />\n\t\t\t\n\t\t\t\t<Rating rating={props.data.rating} />\n\n\t\t\t\t<Contact contact={props.data.contact} />\n\n\t\t</Grid>\n\t)\n}\n\nexport default RestaurantCard;","import React from 'react';\n\nimport { Box, Text } from 'grommet';\n\nconst AverageRating = (props) => {\n\treturn(\n\n\t\t    <Box pad=\"medium\" background=\"brand\">\n\t\t      <Text size=\"small\">Average rating: {props.data}</Text>\n\t\t    </Box>\n\n\t)\n}\n\nexport default AverageRating;","import React from 'react';\n\nimport { Box, Text } from 'grommet';\n\nconst StandardDeviationLabel = (props) => {\n\treturn(\n\n\t\t    <Box pad=\"medium\" background=\"brand\">\n\t\t      <Text size=\"small\">Sigma: {props.sigma}</Text>\n\t\t    </Box>\n\n\t)\n}\n\nexport default StandardDeviationLabel;","import React from 'react';\n\nimport { Box, Text } from 'grommet';\n\nconst TotalRestaurantsInRadius = (props) => {\n\treturn(\n\n\t\t    <Box pad=\"medium\" background=\"brand\">\n\t\t      <Text size=\"small\">Total restaurants in radius: {props.total}</Text>\n\t\t    </Box>\n\n\t)\n}\n\nexport default TotalRestaurantsInRadius;","import { createContext } from 'react';\n\nconst Context = createContext({\n\tlat: 19.3117664,\n\tlng: -98.716323,\n\tradius: 0,\n\trestaurants: [],\n\taux: [],\n\tfiltered: false\n})\n\nexport default Context;","import React, { useState, useContext } from 'react';\n\nimport RestaurantCard from '../RestaurantCard';\n\nimport AverageRatingLabel from '../AverageRatingLabel'\nimport StandardDeviationLabel from '../StandardDeviationLabel'\nimport TotalRestaurantsInRadius from '../TotalRestaurantsInRadius'\n\nimport { Anchor, Box, Button, InfiniteScroll } from 'grommet';\nimport { Ascend, Descend } from 'grommet-icons';\n\nimport Context from '../context'\n\nconst RestaurantList = (props) => {\n\n\tconst {state, dispatch} = useContext(Context);\n\n\tconst sortByKey = (array, key, order) => {\n\t    return array.sort((a, b) => {\n\t        const x = a[key]; const y = b[key];\n\t        if (order)\n\t        \treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t    \telse\n\t    \t\treturn ((x > y) ? -1 : ((x < y) ? 1 : 0));\n\t    });\n\t}\n\n\tconst getAverageRating = () => {\n\t    let sum = 0;\n\t    const m = state.restaurants.length\n\n\t    for (let i = state.restaurants.length - 1; i >= 0; i--) {\n\t      sum += state.restaurants[i].rating \n\t    }\n\n\t    return (sum/m)\n\t}\n\n\tconst getStdDeviation = () => {\n\n\t    let sum = 0;\n\t    const m = state.restaurants.length\n\n\t    for (let i = state.restaurants.length - 1; i >= 0; i--) {\n\t      sum += Math.pow((parseFloat(state.restaurants[i].rating) - parseFloat(getAverageRating())), 2)\n\t    }\n\n\t\treturn (Math.sqrt(sum/(m-1)).toFixed(3))\n\n\t}\n\n\tconst [name_asc, setNameAsc] = useState(true);\n\tconst [rating_asc, setRatingAsc] = useState(true);\n\n\treturn(\n\t\t<Box direction=\"column\" gap=\"medium\" >\n\t\t\t<Box direction=\"row\" gap=\"large\" pad=\"medium\" justify=\"center\"> \n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t  \tlabel=\"A-Z\"\n\t\t\t\t\t  \ticon={ name_asc ? (<Ascend/>) : (<Descend/>)}\n\n\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t  \tconst arr = sortByKey([...state.restaurants], \"name\", name_asc);\n\t\t\t\t\t  \tsetNameAsc(!name_asc);\n\t\t\t\t\t  \tdispatch ({type: \"UPDATE_RESTAURANTS\", payload: arr});\n\t\t\t\t\t  }}\n\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t  \tlabel=\"Rating\"\n\t\t\t\t\t  \ticon={ rating_asc ? (<Ascend/>) : (<Descend/>)}\n\n\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t  \tconst arr = sortByKey([...state.restaurants], \"rating\", rating_asc)\n\t\t\t\t\t\tsetRatingAsc(!rating_asc)\n\t\t\t\t\t  \tdispatch ({type: \"UPDATE_RESTAURANTS\", payload: arr});\n\n\t\t\t\t\t  }}\n\n\t\t\t\t\t/>\n\n\t\t\t\t</Box>\n\t\t\t</Box>\n\n\t\t\t<Box direction=\"column\">\n\t            <TotalRestaurantsInRadius total={state.restaurants.length}/>\n\t            <AverageRatingLabel data={getAverageRating()}/>\n\t            <StandardDeviationLabel sigma={getStdDeviation()}/>\n            </Box>\n<br /><br /><br />\n\t\t\t<Box overflow=\"auto\" pad=\"small\" direction=\"column\">\n\t\t\t\t<InfiniteScroll items={state.restaurants}>\n\t\t\t\t {((item, key)=>(<RestaurantCard data={item} key={item.id}/>))}\n\t\t\t\t</InfiniteScroll>\n\t\t\t</Box>\n\n\t\t</Box>\n\t)\n}\n\nexport default RestaurantList;","import React, { useContext, useState } from 'react'\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl'\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport {Box} from 'grommet'\nimport { Cafeteria, Location } from 'grommet-icons'\n\nimport Context from '../context'\n\nconst navigationControl = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    margin: \"1em\"\n  }\n\nconst INITIAL_VIEWPORT = {\n\tlatitude: 19.4320281,\n\tlongitude: -99.1336334,\n\tzoom: 15\n}\nconst RestaurantMap = () => {\n\tconst {state, dispatch} = useContext(Context);\n\tconst [viewport, setViewport] = useState(INITIAL_VIEWPORT);\n\n\tconst handleMapClick = ({lngLat, leftButton}) => {\n\t\tif(!leftButton) return;\n\t\tconst [lng, lat] = lngLat;\n\n\t\tdispatch ({type: \"UPDATE_LONGITUDE\" , payload: lng})\n\n\t\tdispatch ({type: \"UPDATE_LATITUDE\", payload: lat})\n\t}\n\n\treturn (\n\t\t<Box pad=\"small\" fill>\n\t\t\t<ReactMapGL \n\t\t\t\tonClick={handleMapClick}\n\t\t\t\twidth=\"100vw\"\n\t\t\t\theight=\"100vh\"\n\t\t\t\tmapStyle=\"mapbox://styles/mapbox/streets-v9\"\n\t\t\t\t{...viewport}\n\t\t\t\tmapboxApiAccessToken = \"pk.eyJ1IjoidnphbGJlcnRvIiwiYSI6ImNrMjllZzNjdTFtZXMzZXRjaHJ6Z2NlNW4ifQ.0DS64cOS3tH51tPaajudew\"\n\t\t\t\tonViewportChange={(viewport)=>setViewport(viewport)}\n\t\t\t>\n\n\t\t\t\t<div style={navigationControl}>\n\t\t\t\t\t<NavigationControl onViewportChange={(viewport)=>setViewport(viewport)} />\n\t\t\t\t</div>\n\n\t\t\t<Marker latitude={state.lat} longitude={state.lng} >\n\t\t\t    <Location />\n\t\t\t </Marker>\n\n\t\t\t {state.restaurants[0] && (\n\t\t\t \tstate.restaurants.map(res=>{\n\t\t\t \t\treturn (\n\t\t\t\t\t\t<Marker latitude={res.address.location.lat} longitude={res.address.location.lng} offsetLeft={-20} offsetTop={-10}>\n\t\t\t\t\t\t    <Cafeteria/>\n\t\t\t\t\t\t </Marker>\n\t\t\t \t\t)\n\t\t\t \t})\n\t\t\t ) }\n\t\t\t</ReactMapGL>\n\t\t</Box>\n\t);\n}\n\nexport default RestaurantMap;","import React, {useContext} from 'react'\nimport { Anchor, Box, Button, Text, TextInput } from 'grommet'\n\nimport Context from '../context'\n\n\nconst FilterControls = () => {\n\n\tconst {state} = useContext(Context)\n\tconst {dispatch} = useContext(Context);\n\n\tconst radiusUpdate = (event)=>{dispatch ({type: \"UPDATE_RADIUS\", payload: event.target.value})}\n\treturn (\n\t\t<Box direction=\"row\">\n\t\t<Box basis=\"small\">\n\t\t<Text><b>latitude:</b> {state.lat}\n\t\t</Text>\n\t\t\n\t\t</Box>\n\n\t\t<Box basis=\"small\">\n\t\t<Text><b>latitude: </b>{state.lng}\n\t\t</Text>\n\t\t</Box>\n\n\t\t<Box basis=\"small\">\n\n\n\t\t<TextInput \n\t\t\tplaceholder={!state.filtered && \"(radius in meters)\"}\n\t\t\tonChange={radiusUpdate}\n\t\t/>\n\t\t</Box>\n\n\t\t<Button label=\"Filter\" onClick={ () => dispatch ({type: \"FILTER_BY_RADIUS\"}) } />\n\n\n\t\t\t<Box align=\"center\">\n\n\t\t\t\t{state.filtered && (\n\t\t\t\t\t<Anchor label=\"remove filter [x]\" onClick={()=>dispatch({type:'REMOVE_FILTER'})}/>\n\t\t\t\t) ||Â <p>Drop a pin and set radius</p>}\n\n\t\t\t</Box>\n\t\t</Box>\n\n\t);\n}\n\nexport default FilterControls;","\t\n//This function takes in latitude and longitude of two location and returns the distance between them in km (thanks, s.o.)\nfunction calcCrow(coords1, coords2)\n{\n  // var R = 6.371; // km\n  var R = 6371000;\n  var dLat = toRad(coords2.lat-coords1.lat);\n  var dLon = toRad(coords2.lng-coords1.lng);\n  var lat1 = toRad(coords1.lat);\n  var lat2 = toRad(coords2.lat);\n\n  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  var d = R * c;\n  console.log(d)\n  return d;\n}\n\n// Converts numeric degrees to radians\nfunction toRad(Value)\n{\n    return Value * Math.PI / 180;\n}\n\nexport default function Reducer(state, { type, payload }){\n\tswitch(type){\n\n\t\tcase \"UPDATE_RESTAURANTS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trestaurants: payload\n\t\t\t}\n\n\t\tcase \"UPDATE_LATITUDE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlat: payload\n\t\t\t}\n\n\t\tcase \"UPDATE_LONGITUDE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlng: payload\n\t\t\t}\n\n\t\tcase \"UPDATE_RADIUS\":\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tradius: parseFloat(payload)\n\t\t\t}\n\n\t\tcase \"REMOVE_FILTER\":\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tradius: 0,\n\t\t\t\tfiltered: false,\n\t\t\t\trestaurants: state.aux,\n\t\t\t\taux: [],\n\t\t\t}\n\n\n\t\tcase \"FILTER_BY_RADIUS\":\n\t\tif (state.filtered){\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trestaurants: state.aux.filter(el=>calcCrow(el.address.location, {lat: state.lat, lng: state.lng}) <= (state.radius))\n\t\t\t}\n\t\t}else\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tfiltered: true,\n\t\t\taux: state.restaurants,\n\t\t\trestaurants: state.restaurants.filter(el=>calcCrow(el.address.location, {lat: state.lat, lng: state.lng}) <= (state.radius))\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}","import React, { useState, useEffect, useContext, useReducer } from \"react\";\nimport axios from 'axios';\n\nimport Typography from '@material-ui/core/Typography';\nimport 'typeface-roboto';\n\nimport { Anchor, Grid, Grommet, Box, Text } from 'grommet';\n\nimport RestaurantList from '../RestaurantList'\nimport RestaurantMap from '../RestaurantMap'\n\nimport RatingDistributionChart from '../RatingDistributionChart'\nimport FilterControls from '../FilterControls'\nimport Context from '../context'\nimport Reducer from '../reducer'\n\nconst Melp = () => {\nconst initialState = useContext(Context);\nconst [state, dispatch] = useReducer(Reducer, initialState);\n\nconst [avg, setAvg] = useState(0);\nconst [sigma, setSigma] = useState(0);\n\n//This block performs the initial data load\n{\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n    targetUrl = 'https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json'\n\n  async function fetchData() {\n    const res = await axios(proxyUrl + targetUrl);\n\n    dispatch ({type: 'UPDATE_RESTAURANTS', payload: res.data})\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n}\n\n  const theme = {\n    global: {\n      font: {\n        family: 'Inconsolata',\n        size: '14px',\n        height: '20px',\n      },\n    },\n  }\n\n  return (\n    <Context.Provider value={{state, dispatch}} >\n      <Grommet full theme={theme}>\n        <Grid\n          rows={['xxsmall', 'large']}\n          columns={['1/3', '2/3']}\n          gap=\"small\"\n          areas={[\n            { name: 'header', start: [0, 0], end: [1, 0] },\n            { name: 'nav', start: [0, 1], end: [0, 1] },\n            { name: 'main', start: [1, 1], end: [1, 1] },\n          ]}\n    >\n      <Box gridArea=\"header\" background=\"brand\">\n        <Text>Melp</Text>\n        <Anchor href=\"https://github.com/vzalberto/melp\" primary label=\"View on Github\" target=\"_blank\" />\n      </Box>\n\n      <Box gridArea=\"nav\">\n        <RestaurantList />\n      </Box>\n\n      <Box gridArea=\"main\" background=\"light-2\">\n          <FilterControls />\n\n          <RestaurantMap />\n\n      </Box>\n    </Grid>  \n\n      </Grommet>\n    </Context.Provider>\n  );\n}\n\nexport default Melp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Melp from './Melp/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Melp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}